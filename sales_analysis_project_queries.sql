-----Total sales Per year
SELECT 
    EXTRACT(YEAR FROM OrderDate) AS year,
    sum(orderqty) AS TotalSales
FROM 
    sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY 
    year
ORDER BY 
    year;

--Total count of orders by status 
SELECT status, COUNT(*) 
FROM sales_data 
GROUP BY status
order by status;

-----Total Sales Per Month

SELECT  TO_CHAR(OrderDate, 'Month') AS Month,
sum(orderqty) AS TotalSales
FROM sales_data 
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY Month
ORDER BY totalsales desc;

--Total Revenue per month
SELECT  TO_CHAR(OrderDate, 'Month') AS Month,
SUM(totaldue) AS Revenue,
sum(orderqty) AS TotalSales
FROM sales_data 
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY Month
ORDER BY revenue desc;

-- Total sales by weekday and weekend
SELECT 
    CASE WHEN EXTRACT(DOW FROM OrderDate) IN (1, 2, 3, 4, 5) THEN 'Weekday'
    ELSE 'Weekend' END AS DayType,
SUM(orderqty) AS TotalSales
FROM sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY DayType
ORDER BY totalsales desc;
-- Total sales for each month and best selling month in each year
select 
	year,
	month,
	totalsales 
from (
select 
		extract(year from orderdate)as year, 
		TO_CHAR(orderdate, 'month')as month,
		SUM(orderqty) AS TotalSales,
		rank() over (partition by extract(year from orderdate)
		order by SUM(orderqty) desc)as rank 
from sales_data 
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by year,month 
) 
as t1 where rank = 1;

--Total sales by Category
select productcategory,
sum(orderqty) as totalsales
from sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by productcategory
order by totalsales desc;

--Product Flow Analysis by Category and Status with Total Orders
SELECT
    productcategory,
    status,
    COUNT(*) AS total,
    SUM(COUNT(*)) OVER (PARTITION BY productcategory) AS total_orders
FROM
    sales_data
GROUP BY
    productcategory,
    status
ORDER BY
    productcategory, status;
	
--Revenue generated by each category	
SELECT
    ProductCategory,
    SUM(totaldue) AS Revenue
FROM
    Sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY
    ProductCategory
order by revenue desc;

--Tops 5 Products by revenue
select product,productcategory,SUM(totaldue) AS Revenue
from  sales_data
WHERE
    Status IN ('Shipped')
GROUP BY
    Product,productcategory
order by Revenue desc limit 5;

---Top 5 orders and their revenue by Product Sub-Category
select productsubcategory, sum(totaldue) as revenue,
sum(orderqty) as totalsales
from sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by productsubcategory 
order by revenue desc limit 5;

--Top 5 Customers based on the highest revenue
select customerid,territory, sum(totaldue) as revenue,
sum(orderqty) as totalsales
from sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by customerid, territory
order by revenue desc limit 5;

-- Find the number of unique customers who purchased items from each category

select productcategory,
count(distinct customerid) as unique_customers
from sales_data 
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by productcategory
order by unique_customers desc;

--Sales by region
select territory, sum(orderqty) as totalsales 
from sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
group by territory
order by totalsales desc;
---The freight charges for each category
SELECT
    productcategory,
    round(avg(Freight),2) AS average_freight_charges,
	sum(Freight) as total_freight_charges
FROM
    sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY
    productcategory
ORDER BY
   average_freight_charges desc ;

---Top 5 Salespersons-Product Category Pairs by Total Sales and Revenue
SELECT
    salespersonid,productcategory,
    SUM(totaldue) AS revenue
FROM
    sales_data
WHERE 
    TRIM(LOWER(status)) = 'shipped'
GROUP BY
    salespersonid,productcategory
ORDER BY
   revenue DESC limit 5;
